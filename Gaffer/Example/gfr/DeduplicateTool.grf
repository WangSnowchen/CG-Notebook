import Gaffer
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 5, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 5, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["Prune"] = GafferScene.Prune( "Prune" )
parent.addChild( __children["Prune"] )
__children["Prune"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__in"].addChild( Gaffer.StringVectorDataPlug( "p0", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["__FilterResults"] = GafferScene.FilterResults( "__FilterResults" )
parent.addChild( __children["__FilterResults"] )
__children["__FilterResults"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"].addChild( Gaffer.BoolPlug( "__uiInputConnectionsMinimised", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["searchPaths"] = Gaffer.StringVectorDataPlug( "searchPaths", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["searchPaths"] )
__children["Dot1"] = Gaffer.Dot( "Dot1" )
parent.addChild( __children["Dot1"] )
__children["Dot1"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Prune"]["in"].setInput( __children["Dot1"]["out"] )
__children["Prune"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["Prune"]["__uiPosition"].setValue( imath.V2f( -49.6642609, 37.2924004 ) )
__children["PathFilter"]["paths"].setInput( __children["searchPaths"] )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( -61.4410095, 50.8826141 ) )
__children["Expression"]["__in"]["p0"].setInput( __children["__FilterResults"]["outStrings"] )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( -57.0729752, 27.6167183 ) )
__children["__FilterResults"]["scene"].setInput( __children["Dot1"]["out"] )
__children["__FilterResults"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["__FilterResults"]["root"].setValue( '/' )
__children["__FilterResults"]["__uiPosition"].setValue( imath.V2f( -62.9410095, 36.6039581 ) )
__children["PathFilter1"]["paths"].setInput( __children["Expression"]["__out"]["p0"] )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( -39.5711746, 49.1026459 ) )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( -49.6642609, 60.9275284 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:section', 'top' )
__children["BoxOut"]["in"].setInput( __children["Prune"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["BoxOut"]["passThrough"].setInput( __children["Dot"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["passThrough"], 'noduleLayout:section', 'top' )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( -48.1642609, 17.9275169 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:section', 'bottom' )
__children["Dot"]["in"].setInput( __children["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["Dot"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["Dot"]["out"], 'noduleLayout:section', 'bottom' )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( -40.316597, 25.4275169 ) )
__children["Dot"]["__uiInputConnectionsMinimised"].setValue( True )
Gaffer.Metadata.registerValue( __children["searchPaths"], 'description', "The list of paths to the locations to be matched by the filter.\nA path is formed by a sequence of names separated by `/`, and\nspecifies the hierarchical position of a location within the scene.\nPaths may use Gaffer's standard wildcard characters to match\nmultiple locations.\n\nThe `*` wildcard matches any sequence of characters within\nan individual name, but never matches across names separated\nby a `/`.\n\n - `/robot/*Arm` matches `/robot/leftArm`, `/robot/rightArm` and\n   `/robot/Arm`. But does not match `/robot/limbs/leftArm` or\n   `/robot/arm`.\n\nThe `...` wildcard matches any sequence of names, and can be\nused to match locations no matter where they are parented in\nthe hierarchy.\n\n - `/.../house` matches `/house`, `/street/house` and `/city/street/house`." )
Gaffer.Metadata.registerValue( __children["searchPaths"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["searchPaths"], 'ui:scene:acceptsPaths', True )
Gaffer.Metadata.registerValue( __children["searchPaths"], 'vectorDataPlugValueWidget:dragPointer', 'objects' )
Gaffer.Metadata.registerValue( __children["searchPaths"], 'plugValueWidget:type', 'GafferSceneUI.PathFilterUI._PathsPlugValueWidget' )
__children["Dot1"]["in"].setInput( __children["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["Dot1"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["Dot1"]["out"], 'noduleLayout:section', 'bottom' )
__children["Dot1"]["__uiPosition"].setValue( imath.V2f( -49.6642609, 44.6244316 ) )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'import re\n\ndef filter_special_items(url_set):\n    pattern = r\'/[a-zA-Z]+\\d+$\' \n    return {url for url in url_set if re.search(pattern, url)}\n    \na = parent["__in"]["p0"]\n#IECore.StringVectorData( a )\nfixa = IECore.StringVectorData(filter_special_items(a))\nparent["__out"]["p0"] = fixa' )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'nodeGadget:color', imath.Color3f( 0.144410729, 0.224999994, 0.0958208814 ) )


del __children
